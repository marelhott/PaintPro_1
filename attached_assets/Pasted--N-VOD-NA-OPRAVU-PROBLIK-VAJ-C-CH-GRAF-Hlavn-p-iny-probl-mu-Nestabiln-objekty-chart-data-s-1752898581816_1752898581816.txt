üîß N√ÅVOD NA OPRAVU PROBLIK√ÅVAJ√çC√çCH GRAF≈Æ
Hlavn√≠ p≈ô√≠ƒçiny probl√©mu:
Nestabiln√≠ objekty - chart data se vytv√°≈ôej√≠ jako nov√© objekty p≈ôi ka≈æd√©m renderu
Chybƒõj√≠c√≠ memoization - React Chart.js komponenty se re-renderuj√≠ zbyteƒçnƒõ
Nespr√°vn√© dependencies v useEffect nebo useMemo
≈òe≈°en√≠:
1. Stabilizuj chart data pomoc√≠ useMemo
// ≈†PATNƒö - vytv√°≈ô√≠ nov√Ω objekt p≈ôi ka≈æd√©m renderu
const chartData = {
  labels: ['Leden', '√önor'],
  datasets: [{ data: [10, 20] }]
};
// SPR√ÅVNƒö - stabiln√≠ objekt
const chartData = useMemo(() => ({
  labels: ['Leden', '√önor'],
  datasets: [{
    label: 'Data',
    data: [10, 20],
    backgroundColor: 'rgba(54, 162, 235, 0.2)'
  }]
}), [dependency]); // P≈ôidej spr√°vn√© dependencies
2. Opravi useChart hooku
// V souboru useChartData.js nebo podobn√©m
export const useChartData = (data) => {
  return useMemo(() => {
    // Tady je kl√≠ƒçov√© - stabiln√≠ fallback
    if (!Array.isArray(data) || data.length === 0) {
      return {
        monthlyRevenue: {
          labels: [],
          datasets: []
        }
      };
    }
    
    // Tvoje logika pro zpracov√°n√≠ dat
    return {
      monthlyRevenue: {
        labels: processedLabels,
        datasets: processedDatasets
      }
    };
  }, [data]); // Ujisti se, ≈æe dependency je spr√°vn√°
};
3. Stabilizuj fallback data
// ≈†PATNƒö - nov√Ω objekt p≈ôi ka≈æd√©m renderu
const safeData = chartData || { labels: [], datasets: [] };
// SPR√ÅVNƒö - memo pro stabilitu
const defaultChartData = useMemo(() => ({
  labels: [],
  datasets: []
}), []);
const safeData = chartData || defaultChartData;
4. Podm√≠nƒõn√© renderov√°n√≠ graf≈Ø
// Renderuj grafy pouze kdy≈æ m√°≈° stabiln√≠ data
{chartData?.labels?.length > 0 ? (
  <Bar 
    data={chartData} 
    options={chartOptions} // Tak√© stabilizuj options!
  />
) : (
  <div>≈Ω√°dn√° data</div>
)}
5. Stabilizuj chart options
const chartOptions = useMemo(() => ({
  responsive: true,
  plugins: {
    legend: { display: false }
  },
  scales: {
    y: { beginAtZero: true }
  }
}), []); // Pr√°zdn√© dependencies pokud se options nemƒõn√≠
Kompletn√≠ p≈ô√≠klad opravy:
const Dashboard = () => {
  const [data, setData] = useState([]);
  
  // Stabiln√≠ chart data
  const chartData = useMemo(() => {
    if (!data.length) return null;
    
    return {
      labels: data.map(item => item.month),
      datasets: [{
        label: 'Tr≈æby',
        data: data.map(item => item.amount),
        backgroundColor: 'rgba(54, 162, 235, 0.2)'
      }]
    };
  }, [data]);
  
  // Stabiln√≠ options
  const chartOptions = useMemo(() => ({
    responsive: true,
    plugins: { legend: { display: false } }
  }), []);
  
  // Stabiln√≠ fallback
  const fallbackData = useMemo(() => ({
    labels: ['≈Ω√°dn√° data'],
    datasets: [{ data: [0] }]
  }), []);
  
  return (
    <div>
      {chartData ? (
        <Bar data={chartData} options={chartOptions} />
      ) : (
        <Bar data={fallbackData} options={chartOptions} />
      )}
    </div>
  );
};
Quick fix pro okam≈æit√© ≈ôe≈°en√≠:
// P≈ôidej key prop pro vynucen√≠ stable mount
<Bar 
  key="monthly-chart" 
  data={chartData} 
  options={chartOptions} 
/>
Hlavn√≠ z√°sada: Ka≈æd√Ω objekt p≈ôedan√Ω Chart.js komponentƒõ mus√≠ b√Ωt stabiln√≠ pomoc√≠ useMemo.