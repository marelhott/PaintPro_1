
import html2canvas from 'html2canvas';

// Funkce pro kompletn√≠ PDF export v≈°ech str√°nek
export const exportCompletePDF = async (activeTab, setActiveTab, userData) => {
  try {
    // Zobrazit loading indik√°tor
    const loadingDiv = document.createElement('div');
    loadingDiv.innerHTML = `
      <div style="position: fixed; top: 0; left: 0; width: 100%; height: 100%; background: rgba(0,0,0,0.8); z-index: 10000; display: flex; align-items: center; justify-content: center; color: white; font-size: 18px;">
        üìÑ Generuji PDF... Pros√≠m ƒçekejte
      </div>
    `;
    document.body.appendChild(loadingDiv);

    const originalTab = activeTab;
    const tabs = ['dashboard', 'zakazky', 'reporty', 'kalendar', 'mapa'];
    const tabNames = {
      'dashboard': 'Dashboard - P≈ôehled',
      'zakazky': 'Zak√°zky - Spr√°va', 
      'reporty': 'Reporty - Anal√Ωzy',
      'kalendar': 'Kalend√°≈ô - Pl√°nov√°n√≠',
      'mapa': 'Mapa zak√°zek'
    };

    // Horizont√°ln√≠ PDF (landscape)
    const pdf = new (await import('jspdf')).jsPDF('l', 'mm', 'a4');
    let isFirstPage = true;

    for (const tab of tabs) {
      try {
        console.log(`üîÑ Zpracov√°v√°m sekci: ${tabNames[tab]}`);

        // P≈ôepni na tab
        setActiveTab(tab);

        // Poƒçkej na render - del≈°√≠ doba pro grafy a mapy
        await new Promise(resolve => setTimeout(resolve, 5000));

        // Najdi specifick√Ω obsah podle tabu
        let element;
        if (tab === 'dashboard') {
          element = document.querySelector('.dashboard');
        } else if (tab === 'zakazky') {
          element = document.querySelector('.zakazky');
        } else if (tab === 'reporty') {
          element = document.querySelector('.reporty');
        } else if (tab === 'kalendar') {
          element = document.querySelector('.kalendar');
        } else if (tab === 'mapa') {
          element = document.querySelector('.mapa-zakazek');
        }

        // Fallback na main-content pokud specifick√Ω element neexistuje
        if (!element) {
          element = document.querySelector('.main-content');
        }

        // Dal≈°√≠ fallbacky
        if (!element) {
          element = document.querySelector('[class*="container"]');
        }
        if (!element) {
          element = document.querySelector('.app > div:last-child');
        }
        if (!element) {
          element = document.body;
        }

        if (element) {
          console.log(`üì∏ Zachyt√°v√°m screenshot pro ${tab} z elementu:`, element.className);

          // Poƒçkej na dokonƒçen√≠ v≈°ech animac√≠ a renderov√°n√≠
          await new Promise(resolve => requestAnimationFrame(() => {
            requestAnimationFrame(resolve);
          }));

          // Pro reporty a mapu poƒçkej je≈°tƒõ d√©le na grafy/mapu
          if (tab === 'reporty' || tab === 'mapa') {
            await new Promise(resolve => setTimeout(resolve, 2000));
          }

          // Vy≈°≈°√≠ kvalita screenshotu s lep≈°√≠m nastaven√≠m
          const canvas = await html2canvas(element, {
            scale: 1.5,
            useCORS: true,
            allowTaint: true,
            backgroundColor: '#ffffff',
            width: element.scrollWidth,
            height: element.scrollHeight,
            scrollX: 0,
            scrollY: 0,
            logging: true,
            removeContainer: false,
            foreignObjectRendering: true,
            timeout: 10000
          });

          // P≈ôeveƒè na image
          const imgData = canvas.toDataURL('image/jpeg', 0.85);

          if (!isFirstPage) {
            pdf.addPage();
          }
          isFirstPage = false;

          // P≈ôidej nadpis str√°nky
          pdf.setFontSize(18);
          pdf.setTextColor(60, 60, 60);
          pdf.text(tabNames[tab], 20, 20);

          // Vypoƒç√≠tej rozmƒõry pro horizont√°ln√≠ A4
          const pageWidth = pdf.internal.pageSize.getWidth(); // ~297mm
          const pageHeight = pdf.internal.pageSize.getHeight(); // ~210mm
          const imgAspectRatio = canvas.width / canvas.height;

          let imgWidth = pageWidth - 40; // margin 20mm z ka≈æd√© strany
          let imgHeight = imgWidth / imgAspectRatio;

          // Pokud je obr√°zek p≈ô√≠li≈° vysok√Ω, p≈ôizp≈Øsob
          const maxHeight = pageHeight - 50; // margin + nadpis
          if (imgHeight > maxHeight) {
            imgHeight = maxHeight;
            imgWidth = imgHeight * imgAspectRatio;
          }

          // Vycentruj obr√°zek
          const x = (pageWidth - imgWidth) / 2;
          const y = 30;

          // P≈ôidej obr√°zek
          pdf.addImage(imgData, 'JPEG', x, y, imgWidth, imgHeight);

          console.log(`‚úÖ PDF str√°nka ${tab} p≈ôid√°na (${Math.round(imgWidth)}x${Math.round(imgHeight)}mm)`);
        } else {
          console.error(`‚ùå Nenalezen element pro tab ${tab}`);
        }
      } catch (error) {
        console.error(`‚ùå Chyba p≈ôi zpracov√°n√≠ ${tab}:`, error);
      }
    }

    // Vra≈• p≈Øvodn√≠ tab
    setActiveTab(originalTab);

    // St√°hni PDF
    const fileName = `PaintPro_Kompletni_Report_${new Date().toLocaleDateString('cs-CZ').replace(/\./g, '_')}.pdf`;
    pdf.save(fileName);

    // Odstra≈à loading
    document.body.removeChild(loadingDiv);

    console.log('‚úÖ PDF export dokonƒçen (horizont√°ln√≠ form√°t)');

  } catch (error) {
    console.error('‚ùå Chyba p≈ôi PDF exportu:', error);
    alert('Chyba p≈ôi generov√°n√≠ PDF. Zkuste to pros√≠m znovu.');

    // Odstra≈à loading pokud existuje
    const loadingDiv = document.querySelector('[style*="position: fixed"][style*="z-index: 10000"]');
    if (loadingDiv) loadingDiv.remove();
  }
};
