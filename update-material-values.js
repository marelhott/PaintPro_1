
const { createClient } = require('@supabase/supabase-js');

// P≈ôipoj se k Supabase
const supabase = createClient(
  'https://lseqrqmtjymukewnejdd.supabase.co',
  'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImxzZXFycW10anltdWtld25lamRkIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTIyNjQ2MjcsImV4cCI6MjA2Nzg0MDYyN30.SgWjc-GETZ_D0tJNtErxXhUaH6z_MgRJtxc94RsUXPw'
);

// Data p≈ôesnƒõ podle fotky - ≈ôazeno od nejnovƒõj≈°√≠ch po nejstar≈°√≠
const dataZFotky = [
  // ƒåervenec 2025
  { datum: '5.7.2025', id_zakazky: '#107239', trzba: 3380, palivo: 300, material: 1000, pomocnik: 2000, doba_realizace: 3 },
  
  // ƒåerven 2025  
  { datum: '16.6.2025', id_zakazky: '#88368', trzba: 27200, palivo: 700, material: 2400, pomocnik: 7000, doba_realizace: 2 },
  { datum: '9.6.2025', id_zakazky: '#104470', trzba: 7200, palivo: 200, material: 700, pomocnik: 2000, doba_realizace: 1 },
  
  // Kvƒõten 2025
  { datum: '11.5.2025', id_zakazky: '#95333', trzba: 24000, palivo: 300, material: 700, pomocnik: 2000, doba_realizace: 2 },
  { datum: '13.5.2025', id_zakazky: '#67475', trzba: 8100, palivo: 300, material: 700, pomocnik: 2000, doba_realizace: 1 },
  { datum: '15.5.2025', id_zakazky: '#95105', trzba: 11400, palivo: 300, material: 700, pomocnik: 2000, doba_realizace: 1 },
  { datum: '14.5.2025', id_zakazky: '#95067', trzba: 7500, palivo: 300, material: 700, pomocnik: 2000, doba_realizace: 1 },
  
  // Duben 2025
  { datum: '22.4.2025', id_zakazky: '#82187', trzba: 17800, palivo: 300, material: 700, pomocnik: 0, doba_realizace: 2 },
  { datum: '24.4.2025', id_zakazky: '#67703', trzba: 10400, palivo: 500, material: 1000, pomocnik: 2000, doba_realizace: 2 },
  { datum: '16.4.2025', id_zakazky: '#15457', trzba: 8400, palivo: 500, material: 1000, pomocnik: 1000, doba_realizace: 1 },
  { datum: '19.4.2025', id_zakazky: '#81913', trzba: 10500, palivo: 200, material: 1000, pomocnik: 2500, doba_realizace: 2 },
  
  // √önor 2025
  { datum: '25.2.2025', id_zakazky: '#14674', trzba: 5800, palivo: 300, material: 400, pomocnik: 0, doba_realizace: 1 },
  { datum: '23.2.2025', id_zakazky: '#14181', trzba: 6400, palivo: 300, material: 400, pomocnik: 0, doba_realizace: 1 },
  
  // B≈ôezen 2025
  { datum: '15.3.2025', id_zakazky: 'zak√°zka Vincent', trzba: 5750, palivo: 300, material: 1000, pomocnik: 0, doba_realizace: 2 },
  
  // Leden 2025
  { datum: '27.1.2025', id_zakazky: '#14347', trzba: 6700, palivo: 300, material: 1000, pomocnik: 0, doba_realizace: 2 }
];

async function aktualizujDleDataZFotky() {
  try {
    console.log('üìä Aktualizuji data podle fotky a tv√Ωch pokyn≈Ø...');
    console.log('üìã Celkem k aktualizaci:', dataZFotky.length, 'zak√°zek');
    
    let uspesne = 0;
    let chyby = 0;
    
    for (const radek of dataZFotky) {
      try {
        // Spoƒç√≠tej fee (26,1% z tr≈æby)
        const fee = Math.round(radek.trzba * 0.261);
        // Spoƒç√≠tej fee_off (tr≈æba - fee)
        const fee_off = radek.trzba - fee;
        // Spoƒç√≠tej ƒçist√Ω zisk (fee_off - v≈°echny n√°klady)
        const cisty_zisk = fee_off - radek.palivo - radek.material - radek.pomocnik;
        
        console.log(`\nüîÑ Zpracov√°v√°m: ${radek.id_zakazky}`);
        console.log(`   üìÖ Datum: ${radek.datum}`);
        console.log(`   üí∞ Tr≈æba: ${radek.trzba} Kƒç`);
        console.log(`   üè¶ Fee (26,1%): ${fee} Kƒç`);
        console.log(`   üíµ Fee OFF: ${fee_off} Kƒç`);
        console.log(`   ‚õΩ Palivo: ${radek.palivo} Kƒç`);
        console.log(`   üîß Materi√°l: ${radek.material} Kƒç`);
        console.log(`   üë∑ Pomocn√≠k: ${radek.pomocnik} Kƒç`);
        console.log(`   üíö ƒåist√Ω zisk: ${cisty_zisk} Kƒç`);
        console.log(`   üìÜ Doba realizace: ${radek.doba_realizace} dn≈Ø`);
        
        // Najdi existuj√≠c√≠ zak√°zku podle ID nebo tr≈æby
        const { data: existujici, error: hledaniError } = await supabase
          .from('orders')
          .select('*')
          .eq('user_id', 'lenka')
          .or(`cislo.eq.${radek.id_zakazky},castka.eq.${radek.trzba}`)
          .maybeSingle();
          
        if (hledaniError) {
          console.error(`‚ùå Chyba p≈ôi hled√°n√≠ ${radek.id_zakazky}:`, hledaniError);
          chyby++;
          continue;
        }
        
        if (existujici) {
          // Aktualizuj existuj√≠c√≠ z√°znam
          const { error: updateError } = await supabase
            .from('orders')
            .update({
              datum: radek.datum,
              cislo: radek.id_zakazky,
              castka: radek.trzba,
              fee: fee,
              fee_off: fee_off,
              palivo: radek.palivo,
              material: radek.material,
              pomocnik: radek.pomocnik,
              zisk: cisty_zisk,
              doba_realizace: radek.doba_realizace
            })
            .eq('id', existujici.id);
            
          if (updateError) {
            console.error(`‚ùå Chyba p≈ôi aktualizaci ${radek.id_zakazky}:`, updateError);
            chyby++;
          } else {
            console.log(`‚úÖ ${radek.id_zakazky} √∫spƒõ≈°nƒõ aktualizov√°no`);
            uspesne++;
          }
        } else {
          // Vytvo≈ô nov√Ω z√°znam
          const { error: insertError } = await supabase
            .from('orders')
            .insert([{
              user_id: 'lenka',
              datum: radek.datum,
              cislo: radek.id_zakazky,
              druh: 'malov√°n√≠',
              castka: radek.trzba,
              fee: fee,
              fee_off: fee_off,
              palivo: radek.palivo,
              material: radek.material,
              pomocnik: radek.pomocnik,
              zisk: cisty_zisk,
              doba_realizace: radek.doba_realizace,
              typ: 'byt'
            }]);
            
          if (insertError) {
            console.error(`‚ùå Chyba p≈ôi vytv√°≈ôen√≠ ${radek.id_zakazky}:`, insertError);
            chyby++;
          } else {
            console.log(`‚úÖ ${radek.id_zakazky} √∫spƒõ≈°nƒõ vytvo≈ôeno`);
            uspesne++;
          }
        }
        
        // Kr√°tk√° pauza
        await new Promise(resolve => setTimeout(resolve, 200));
        
      } catch (error) {
        console.error(`‚ùå Chyba p≈ôi zpracov√°n√≠ ${radek.id_zakazky}:`, error);
        chyby++;
      }
    }
    
    console.log(`\nüìä V√ùSLEDEK:`);
    console.log(`‚úÖ √öspƒõ≈°nƒõ zpracov√°no: ${uspesne} zak√°zek`);
    console.log(`‚ùå Chyby: ${chyby} zak√°zek`);
    
    // Zobraz fin√°ln√≠ stav
    console.log('\nüîç Kontrola fin√°ln√≠ho stavu:');
    const { data: vsechnyZakazky } = await supabase
      .from('orders')
      .select('datum, cislo, castka, fee, fee_off, palivo, material, pomocnik, zisk, doba_realizace')
      .eq('user_id', 'lenka')
      .order('datum', { ascending: false });
      
    if (vsechnyZakazky) {
      console.log('\nüìã Aktu√°ln√≠ stav zak√°zek (od nejnovƒõj≈°√≠ch):');
      vsechnyZakazky.forEach(z => {
        console.log(`${z.cislo} | ${z.datum} | Tr≈æba: ${z.castka} | Fee: ${z.fee} | Fee OFF: ${z.fee_off} | Zisk: ${z.zisk} | Doba: ${z.doba_realizace} dn≈Ø`);
      });
    }
    
  } catch (error) {
    console.error('‚ùå Celkov√° chyba:', error);
  }
}

// Spus≈• aktualizaci
aktualizujDleDataZFotky();
